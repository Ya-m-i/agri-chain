async function e(a,t={},i=3,p=15e3,l=1e3){for(let r=0;r<i;r++){const o=new AbortController,c=setTimeout(()=>o.abort(),p);try{const n=await fetch(a,{...t,signal:o.signal});if(clearTimeout(c),!n.ok){let s="Request failed";try{s=(await n.json()).message||s}catch{}throw new Error(s)}return await n.json()}catch(n){if(clearTimeout(c),r===i-1||n.name!=="AbortError"&&!n.message.includes("NetworkError")&&!n.message.includes("Failed to fetch"))throw n;await new Promise(s=>setTimeout(s,l*(r+1)))}}}const u=async a=>await e("/api/farmers",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),d=async a=>await e(`/api/farmers/${a}`,{method:"DELETE"}),h=async()=>await e("/api/farmers"),m=async(a,t)=>await e("/api/farmers/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:a,password:t})}),w=async a=>{try{return await e("/api/claims",{method:"POST",headers:{"Content-Type":"application/json","Cache-Control":"no-cache",Pragma:"no-cache"},body:JSON.stringify(a)},3,3e4)}catch(t){throw t.name==="AbortError"?new Error("Request timed out. Please check your internet connection and try again."):t.message.includes("Failed to fetch")?new Error("Network error. Please check your internet connection and try again."):t}},f=async(a=null)=>{let t="/api/claims";return a&&(t+=`?farmerId=${a}`),await e(t)},g=async(a,t)=>await e(`/api/claims/${a}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),T=async a=>await e("/api/assistance",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),C=async()=>await e("/api/assistance"),S=async a=>await e("/api/assistance/apply",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),E=async a=>await e(`/api/assistance/applications/${a}`),O=async()=>await e("/api/assistance/applications"),b=async(a,t)=>await e(`/api/assistance/applications/${a}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),A=async a=>await e(`/api/assistance/${a}`,{method:"DELETE"}),P=async a=>await e("/api/crop-insurance",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),j=async(a=null)=>{let t="/api/crop-insurance";return a&&(t=`/api/crop-insurance/farmer/${a}`),await e(t)},N=async(a,t)=>await e(`/api/crop-insurance/${a}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),J=async a=>await e(`/api/crop-insurance/${a}`,{method:"DELETE"}),$=async()=>await e("/api/crop-insurance/stats/overview");export{f as a,P as b,w as c,J as d,d as e,j as f,g,T as h,A as i,S as j,b as k,m as l,h as m,C as n,E as o,O as p,$ as q,u as r,N as u};
